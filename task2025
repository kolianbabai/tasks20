Число S состоит из M цифр, например, S=370 и M (количество цифр) = 3
Реализовать логику метода getNumbers, который должен среди натуральных чисел меньше N (long)
находить все числа, удовлетворяющие следующему критерию:
число S равно сумме его цифр, возведенных в M степень
getNumbers должен возвращать все такие числа в порядке возрастания.

Пример искомого числа:
370 = 3*3*3 + 7*7*7 + 0*0*0
8208 = 8*8*8*8 + 2*2*2*2 + 0*0*0*0 + 8*8*8*8

На выполнение дается 10 секунд и 50 МБ памяти.
Требования:

    •
    В классе Solution должен присутствовать метод getNumbers c одним параметром типа long.
    •
    Метод getNumbers должен быть публичным.
    •
    Метод getNumbers должен быть статическим.
    •
    Метод getNumbers должен возвращать массив чисел удовлетворяющих условию задачи.

package com.javarush.task.task20.task2025;

/* 
Алгоритмы-числа
*/

public class Solution {
    public static long[] getNumbers(long N) {

        String number = Long.toString(N);
        String[] numbers = number.split("");
        long[] result = new long[numbers.length];

        for (int i = 0; i < numbers.length; i++) {
            result[i] = Long.parseLong(numbers[i]);
        }

        for (int i = 0; i < result.length ; i++) {
            for (int j = result.length - 1; j > i ; j--) {
                if(result[i] > result[j]){
                    long a = result[i];
                    result[i] = result[j];
                    result[j] = a;
                }
            }
            long p = result[i];

            for (int k = 0; k < result.length - 1; k++) {

                result[i] *= p;
            }
        }

        return result;
    }

    public static void main(String[] args) {

       long [] example = getNumbers(55);
        for (int i = 0; i < example.length ; i++) {
            System.out.print(example[i] + " ");
        }

    }
}